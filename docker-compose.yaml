services:
  # 1. API Gateway / Load Balancer (Exposed to Host)
  nginx:
    image: nginx:stable-alpine
    container_name: phu-nginx
    restart: always
    ports:
      # Expose Nginx on port 5000 (adjust to 80 if not running on host)
      - "5000:80" 
    volumes:
      # **REQUIRED: You must create an nginx.conf file in your project root 
      # to proxy requests to 'app-core' and 'app-realtime' internally.**
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app-core
      - app-realtime
      - redis
      
  # 2. Application Server (Core Business Logic)
  app-core:
    # Uses the same Dockerfile
    build: . 
    container_name: phu-app-core
    # Ports are NOT exposed to the host, only Nginx can access them
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - MONGO_URI=mongodb://admin:password@mongodb:27017/PokemonNexusDB?authSource=admin
      - SECRET_KEY=your_strong_and_secret_key_for_flashing
      - REDIS_URI=redis://redis:6379/0 # Used by Celery for tasking
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./web:/app 
    # Must use a production-ready WSGI server like Gunicorn
    command: gunicorn -w 4 -b 0.0.0.0:5000 app:app 

  # 3. Real-Time/Battle Server (WebSockets/SocketIO)
  app-realtime:
    # Uses the same Dockerfile
    build: . 
    container_name: phu-app-realtime
    # Ports are NOT exposed to the host, only Nginx can access them
    environment:
      - FLASK_APP=app.py
      - MONGO_URI=mongodb://admin:password@mongodb:27017/PokemonNexusDB?authSource=admin
      - SECRET_KEY=your_strong_and_secret_key_for_flashing
      - REDIS_URI=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./web:/app 
    # Use Flask-SocketIO with eventlet/gevent for async WSGI
    command: python -m gunicorn -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1 --bind 0.0.0.0:5001 app:app # Changed port to 5001

  # 4. Task Queue Broker (Message Broker)
  redis:
    image: redis:latest
    container_name: phu-redis
    restart: always
    # Port 6379 is for internal use, not exposed to the host
    volumes:
      - phu-redis-volume:/data

  # 5. Database (State)
  mongodb:
    image: mongo:latest
    container_name: phu-mongodb
    restart: always
    ports:
      # Port 27017 is for external tools/access
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - phu-mongo-volume:/data/db

volumes:
  phu-mongo-volume:
  phu-redis-volume: